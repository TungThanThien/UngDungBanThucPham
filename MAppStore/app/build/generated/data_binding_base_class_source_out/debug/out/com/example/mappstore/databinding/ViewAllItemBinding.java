// Generated by view binder compiler. Do not edit!
package com.example.mappstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mappstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewAllItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView viewDescription;

  @NonNull
  public final ImageView viewImg;

  @NonNull
  public final TextView viewName;

  @NonNull
  public final TextView viewPrice;

  @NonNull
  public final TextView viewRating;

  private ViewAllItemBinding(@NonNull CardView rootView, @NonNull TextView viewDescription,
      @NonNull ImageView viewImg, @NonNull TextView viewName, @NonNull TextView viewPrice,
      @NonNull TextView viewRating) {
    this.rootView = rootView;
    this.viewDescription = viewDescription;
    this.viewImg = viewImg;
    this.viewName = viewName;
    this.viewPrice = viewPrice;
    this.viewRating = viewRating;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewAllItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewAllItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_all_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewAllItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.view_description;
      TextView viewDescription = ViewBindings.findChildViewById(rootView, id);
      if (viewDescription == null) {
        break missingId;
      }

      id = R.id.view_img;
      ImageView viewImg = ViewBindings.findChildViewById(rootView, id);
      if (viewImg == null) {
        break missingId;
      }

      id = R.id.view_name;
      TextView viewName = ViewBindings.findChildViewById(rootView, id);
      if (viewName == null) {
        break missingId;
      }

      id = R.id.view_price;
      TextView viewPrice = ViewBindings.findChildViewById(rootView, id);
      if (viewPrice == null) {
        break missingId;
      }

      id = R.id.view_rating;
      TextView viewRating = ViewBindings.findChildViewById(rootView, id);
      if (viewRating == null) {
        break missingId;
      }

      return new ViewAllItemBinding((CardView) rootView, viewDescription, viewImg, viewName,
          viewPrice, viewRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
